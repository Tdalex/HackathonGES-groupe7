<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 3.0.3 (doctrine2-annotation) on 2017-04-25 13:11:30.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * Entity\Question
 *
 * @ORM\Entity(repositoryClass="QuestionRepository")
 * @ORM\Table(name="Question", indexes={@ORM\Index(name="fk_Question_JobApplication1_idx", columns={"IdJobApplication"})})
 */
class Question
{
    /**
     * @ORM\Id
     * @ORM\Column(type="integer", options={"unsigned":true})
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $IdQuestion;

    /**
     * @ORM\Column(type="string", length=45, nullable=true)
     */
    protected $Wording;

    /**
     * @ORM\Column(name="`Type`", type="string", length=45, nullable=true)
     */
    protected $Type;

    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     */
    protected $IdJobApplication;

    /**
     * @ORM\OneToMany(targetEntity="Answer", mappedBy="question")
     * @ORM\JoinColumn(name="IdQuestion", referencedColumnName="IdQuestion", nullable=false)
     */
    protected $answers;

    /**
     * @ORM\OneToMany(targetEntity="Game", mappedBy="question")
     * @ORM\JoinColumn(name="IdQuestion", referencedColumnName="Last_question", nullable=false)
     */
    protected $games;

    /**
     * @ORM\OneToMany(targetEntity="UserAnswer", mappedBy="question")
     * @ORM\JoinColumn(name="IdQuestion", referencedColumnName="IdQuestion", nullable=false)
     */
    protected $userAnswers;

    /**
     * @ORM\ManyToOne(targetEntity="JobApplication", inversedBy="questions")
     * @ORM\JoinColumn(name="IdJobApplication", referencedColumnName="IdJobApplication", nullable=false)
     */
    protected $jobApplication;

    public function __construct()
    {
        $this->answers = new ArrayCollection();
        $this->games = new ArrayCollection();
        $this->userAnswers = new ArrayCollection();
    }

    /**
     * Set the value of IdQuestion.
     *
     * @param integer $IdQuestion
     * @return \Entity\Question
     */
    public function setIdQuestion($IdQuestion)
    {
        $this->IdQuestion = $IdQuestion;

        return $this;
    }

    /**
     * Get the value of IdQuestion.
     *
     * @return integer
     */
    public function getIdQuestion()
    {
        return $this->IdQuestion;
    }

    /**
     * Set the value of Wording.
     *
     * @param string $Wording
     * @return \Entity\Question
     */
    public function setWording($Wording)
    {
        $this->Wording = $Wording;

        return $this;
    }

    /**
     * Get the value of Wording.
     *
     * @return string
     */
    public function getWording()
    {
        return $this->Wording;
    }

    /**
     * Set the value of Type.
     *
     * @param string $Type
     * @return \Entity\Question
     */
    public function setType($Type)
    {
        $this->Type = $Type;

        return $this;
    }

    /**
     * Get the value of Type.
     *
     * @return string
     */
    public function getType()
    {
        return $this->Type;
    }

    /**
     * Set the value of IdJobApplication.
     *
     * @param integer $IdJobApplication
     * @return \Entity\Question
     */
    public function setIdJobApplication($IdJobApplication)
    {
        $this->IdJobApplication = $IdJobApplication;

        return $this;
    }

    /**
     * Get the value of IdJobApplication.
     *
     * @return integer
     */
    public function getIdJobApplication()
    {
        return $this->IdJobApplication;
    }

    /**
     * Add Answer entity to collection (one to many).
     *
     * @param \Entity\Answer $answer
     * @return \Entity\Question
     */
    public function addAnswer(Answer $answer)
    {
        $this->answers[] = $answer;

        return $this;
    }

    /**
     * Remove Answer entity from collection (one to many).
     *
     * @param \Entity\Answer $answer
     * @return \Entity\Question
     */
    public function removeAnswer(Answer $answer)
    {
        $this->answers->removeElement($answer);

        return $this;
    }

    /**
     * Get Answer entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getAnswers()
    {
        return $this->answers;
    }

    /**
     * Add Game entity to collection (one to many).
     *
     * @param \Entity\Game $game
     * @return \Entity\Question
     */
    public function addGame(Game $game)
    {
        $this->games[] = $game;

        return $this;
    }

    /**
     * Remove Game entity from collection (one to many).
     *
     * @param \Entity\Game $game
     * @return \Entity\Question
     */
    public function removeGame(Game $game)
    {
        $this->games->removeElement($game);

        return $this;
    }

    /**
     * Get Game entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getGames()
    {
        return $this->games;
    }

    /**
     * Add UserAnswer entity to collection (one to many).
     *
     * @param \Entity\UserAnswer $userAnswer
     * @return \Entity\Question
     */
    public function addUserAnswer(UserAnswer $userAnswer)
    {
        $this->userAnswers[] = $userAnswer;

        return $this;
    }

    /**
     * Remove UserAnswer entity from collection (one to many).
     *
     * @param \Entity\UserAnswer $userAnswer
     * @return \Entity\Question
     */
    public function removeUserAnswer(UserAnswer $userAnswer)
    {
        $this->userAnswers->removeElement($userAnswer);

        return $this;
    }

    /**
     * Get UserAnswer entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getUserAnswers()
    {
        return $this->userAnswers;
    }

    /**
     * Set JobApplication entity (many to one).
     *
     * @param \Entity\JobApplication $jobApplication
     * @return \Entity\Question
     */
    public function setJobApplication(JobApplication $jobApplication = null)
    {
        $this->jobApplication = $jobApplication;

        return $this;
    }

    /**
     * Get JobApplication entity (many to one).
     *
     * @return \Entity\JobApplication
     */
    public function getJobApplication()
    {
        return $this->jobApplication;
    }

    public function __sleep()
    {
        return array('IdQuestion', 'Wording', 'Type', 'IdJobApplication');
    }
}