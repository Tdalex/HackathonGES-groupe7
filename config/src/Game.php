<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 3.0.3 (doctrine2-annotation) on 2017-04-25 13:11:30.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * Entity\Game
 *
 * @ORM\Entity(repositoryClass="GameRepository")
 * @ORM\Table(name="Game", indexes={@ORM\Index(name="fk_Game_User1_idx", columns={"IdUser"}), @ORM\Index(name="fk_Game_question1_idx", columns={"Last_question"}), @ORM\Index(name="fk_Game_JobApplication1_idx", columns={"IdJobApplication"})})
 */
class Game
{
    /**
     * @ORM\Id
     * @ORM\Column(type="integer", options={"unsigned":true})
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $IdGame;

    /**
     * @ORM\Id
     * @ORM\Column(type="integer", options={"unsigned":true})
     */
    protected $IdUser;

    /**
     * @ORM\Column(type="datetime", nullable=true)
     */
    protected $Last_play;

    /**
     * @ORM\Column(type="integer", nullable=true)
     */
    protected $Score;

    /**
     * @ORM\Id
     * @ORM\Column(type="integer", options={"unsigned":true})
     */
    protected $Last_question;

    /**
     * @ORM\Column(type="integer")
     */
    protected $IdJobApplication;

    /**
     * @ORM\Column(type="smallint", nullable=true)
     */
    protected $Is_finished;

    /**
     * @ORM\Column(type="string", length=45, nullable=true)
     */
    protected $Gamecol;

    /**
     * @ORM\OneToMany(targetEntity="UserAnswer", mappedBy="game")
     * @ORM\JoinColumn(name="IdGame", referencedColumnName="IdGame", nullable=false)
     */
    protected $userAnswers;

    /**
     * @ORM\ManyToOne(targetEntity="User", inversedBy="games")
     * @ORM\JoinColumn(name="IdUser", referencedColumnName="IdUser", nullable=false)
     */
    protected $user;

    /**
     * @ORM\ManyToOne(targetEntity="Question", inversedBy="games")
     * @ORM\JoinColumn(name="Last_question", referencedColumnName="IdQuestion", nullable=false)
     */
    protected $question;

    /**
     * @ORM\ManyToOne(targetEntity="JobApplication", inversedBy="games")
     * @ORM\JoinColumn(name="IdJobApplication", referencedColumnName="IdJobApplication", nullable=false)
     */
    protected $jobApplication;

    public function __construct()
    {
        $this->userAnswers = new ArrayCollection();
    }

    /**
     * Set the value of IdGame.
     *
     * @param integer $IdGame
     * @return \Entity\Game
     */
    public function setIdGame($IdGame)
    {
        $this->IdGame = $IdGame;

        return $this;
    }

    /**
     * Get the value of IdGame.
     *
     * @return integer
     */
    public function getIdGame()
    {
        return $this->IdGame;
    }

    /**
     * Set the value of IdUser.
     *
     * @param integer $IdUser
     * @return \Entity\Game
     */
    public function setIdUser($IdUser)
    {
        $this->IdUser = $IdUser;

        return $this;
    }

    /**
     * Get the value of IdUser.
     *
     * @return integer
     */
    public function getIdUser()
    {
        return $this->IdUser;
    }

    /**
     * Set the value of Last_play.
     *
     * @param \DateTime $Last_play
     * @return \Entity\Game
     */
    public function setLastPlay($Last_play)
    {
        $this->Last_play = $Last_play;

        return $this;
    }

    /**
     * Get the value of Last_play.
     *
     * @return \DateTime
     */
    public function getLastPlay()
    {
        return $this->Last_play;
    }

    /**
     * Set the value of Score.
     *
     * @param integer $Score
     * @return \Entity\Game
     */
    public function setScore($Score)
    {
        $this->Score = $Score;

        return $this;
    }

    /**
     * Get the value of Score.
     *
     * @return integer
     */
    public function getScore()
    {
        return $this->Score;
    }

    /**
     * Set the value of Last_question.
     *
     * @param integer $Last_question
     * @return \Entity\Game
     */
    public function setLastQuestion($Last_question)
    {
        $this->Last_question = $Last_question;

        return $this;
    }

    /**
     * Get the value of Last_question.
     *
     * @return integer
     */
    public function getLastQuestion()
    {
        return $this->Last_question;
    }

    /**
     * Set the value of IdJobApplication.
     *
     * @param integer $IdJobApplication
     * @return \Entity\Game
     */
    public function setIdJobApplication($IdJobApplication)
    {
        $this->IdJobApplication = $IdJobApplication;

        return $this;
    }

    /**
     * Get the value of IdJobApplication.
     *
     * @return integer
     */
    public function getIdJobApplication()
    {
        return $this->IdJobApplication;
    }

    /**
     * Set the value of Is_finished.
     *
     * @param integer $Is_finished
     * @return \Entity\Game
     */
    public function setIsFinished($Is_finished)
    {
        $this->Is_finished = $Is_finished;

        return $this;
    }

    /**
     * Get the value of Is_finished.
     *
     * @return integer
     */
    public function getIsFinished()
    {
        return $this->Is_finished;
    }

    /**
     * Set the value of Gamecol.
     *
     * @param string $Gamecol
     * @return \Entity\Game
     */
    public function setGamecol($Gamecol)
    {
        $this->Gamecol = $Gamecol;

        return $this;
    }

    /**
     * Get the value of Gamecol.
     *
     * @return string
     */
    public function getGamecol()
    {
        return $this->Gamecol;
    }

    /**
     * Add UserAnswer entity to collection (one to many).
     *
     * @param \Entity\UserAnswer $userAnswer
     * @return \Entity\Game
     */
    public function addUserAnswer(UserAnswer $userAnswer)
    {
        $this->userAnswers[] = $userAnswer;

        return $this;
    }

    /**
     * Remove UserAnswer entity from collection (one to many).
     *
     * @param \Entity\UserAnswer $userAnswer
     * @return \Entity\Game
     */
    public function removeUserAnswer(UserAnswer $userAnswer)
    {
        $this->userAnswers->removeElement($userAnswer);

        return $this;
    }

    /**
     * Get UserAnswer entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getUserAnswers()
    {
        return $this->userAnswers;
    }

    /**
     * Set User entity (many to one).
     *
     * @param \Entity\User $user
     * @return \Entity\Game
     */
    public function setUser(User $user = null)
    {
        $this->user = $user;

        return $this;
    }

    /**
     * Get User entity (many to one).
     *
     * @return \Entity\User
     */
    public function getUser()
    {
        return $this->user;
    }

    /**
     * Set Question entity (many to one).
     *
     * @param \Entity\Question $question
     * @return \Entity\Game
     */
    public function setQuestion(Question $question = null)
    {
        $this->question = $question;

        return $this;
    }

    /**
     * Get Question entity (many to one).
     *
     * @return \Entity\Question
     */
    public function getQuestion()
    {
        return $this->question;
    }

    /**
     * Set JobApplication entity (many to one).
     *
     * @param \Entity\JobApplication $jobApplication
     * @return \Entity\Game
     */
    public function setJobApplication(JobApplication $jobApplication = null)
    {
        $this->jobApplication = $jobApplication;

        return $this;
    }

    /**
     * Get JobApplication entity (many to one).
     *
     * @return \Entity\JobApplication
     */
    public function getJobApplication()
    {
        return $this->jobApplication;
    }

    public function __sleep()
    {
        return array('IdGame', 'IdUser', 'Last_play', 'Score', 'Last_question', 'IdJobApplication', 'Is_finished', 'Gamecol');
    }
}