<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 3.0.3 (doctrine2-annotation) on 2017-04-26 08:43:03.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * Entity\JobApplication
 *
 * @ORM\Entity(repositoryClass="JobApplicationRepository")
 * @ORM\Table(name="JobApplication")
 */
class JobApplication
{
    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $IdJobApplication;

    /**
     * @ORM\Column(name="`Name`", type="string", length=45)
     */
    protected $Name;

    /**
     * @ORM\Column(type="string", length=45)
     */
    protected $Timeout;

    /**
     * @ORM\Column(type="integer", nullable=true)
     */
    protected $Quantity;

    /**
     * @ORM\Column(type="string", length=45, nullable=true)
     */
    protected $Description;

    /**
     * @ORM\OneToMany(targetEntity="Game", mappedBy="jobApplication")
     * @ORM\JoinColumn(name="IdJobApplication", referencedColumnName="IdJobApplication", nullable=false)
     */
    protected $games;

    /**
     * @ORM\OneToMany(targetEntity="Question", mappedBy="jobApplication")
     * @ORM\JoinColumn(name="IdJobApplication", referencedColumnName="IdJobApplication", nullable=false)
     */
    protected $questions;

    public function __construct()
    {
        $this->games = new ArrayCollection();
        $this->questions = new ArrayCollection();
    }

    /**
     * Set the value of IdJobApplication.
     *
     * @param integer $IdJobApplication
     * @return \Entity\JobApplication
     */
    public function setIdJobApplication($IdJobApplication)
    {
        $this->IdJobApplication = $IdJobApplication;

        return $this;
    }

    /**
     * Get the value of IdJobApplication.
     *
     * @return integer
     */
    public function getIdJobApplication()
    {
        return $this->IdJobApplication;
    }

    /**
     * Set the value of Name.
     *
     * @param string $Name
     * @return \Entity\JobApplication
     */
    public function setName($Name)
    {
        $this->Name = $Name;

        return $this;
    }

    /**
     * Get the value of Name.
     *
     * @return string
     */
    public function getName()
    {
        return $this->Name;
    }

    /**
     * Set the value of Timeout.
     *
     * @param string $Timeout
     * @return \Entity\JobApplication
     */
    public function setTimeout($Timeout)
    {
        $this->Timeout = $Timeout;

        return $this;
    }

    /**
     * Get the value of Timeout.
     *
     * @return string
     */
    public function getTimeout()
    {
        return $this->Timeout;
    }

    /**
     * Set the value of Quantity.
     *
     * @param integer $Quantity
     * @return \Entity\JobApplication
     */
    public function setQuantity($Quantity)
    {
        $this->Quantity = $Quantity;

        return $this;
    }

    /**
     * Get the value of Quantity.
     *
     * @return integer
     */
    public function getQuantity()
    {
        return $this->Quantity;
    }

    /**
     * Set the value of Description.
     *
     * @param string $Description
     * @return \Entity\JobApplication
     */
    public function setDescription($Description)
    {
        $this->Description = $Description;

        return $this;
    }

    /**
     * Get the value of Description.
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->Description;
    }

    /**
     * Add Game entity to collection (one to many).
     *
     * @param \Entity\Game $game
     * @return \Entity\JobApplication
     */
    public function addGame(Game $game)
    {
        $this->games[] = $game;

        return $this;
    }

    /**
     * Remove Game entity from collection (one to many).
     *
     * @param \Entity\Game $game
     * @return \Entity\JobApplication
     */
    public function removeGame(Game $game)
    {
        $this->games->removeElement($game);

        return $this;
    }

    /**
     * Get Game entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getGames()
    {
        return $this->games;
    }

    /**
     * Add Question entity to collection (one to many).
     *
     * @param \Entity\Question $question
     * @return \Entity\JobApplication
     */
    public function addQuestion(Question $question)
    {
        $this->questions[] = $question;

        return $this;
    }

    /**
     * Remove Question entity from collection (one to many).
     *
     * @param \Entity\Question $question
     * @return \Entity\JobApplication
     */
    public function removeQuestion(Question $question)
    {
        $this->questions->removeElement($question);

        return $this;
    }

    /**
     * Get Question entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getQuestions()
    {
        return $this->questions;
    }

    public function __sleep()
    {
        return array('IdJobApplication', 'Name', 'Timeout', 'Quantity', 'Description');
    }
}